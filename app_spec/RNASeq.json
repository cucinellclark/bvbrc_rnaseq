{
    "id": "RNASeq",
    "script": "App-RNASeq",
    "label": "Analyze RNASeq reads",
    "description": "Align or assemble RNASeq reads into transcripts with normalized expression levels",
    "default_memory": "100G",
    "parameters": [
        {
            "id": "experimental_conditions",
            "label": "Experimental conditions",
            "allow_multiple": true,
            "required": 0,
            "default": null,
            "type": "string"
        },
        {
            "id": "contrasts",
            "label": "Contrast list",
            "required": 0,
            "default": null,
            "type": "string"
        },
        {
            "id": "strand_specific",
            "label": "Are the reads in this study strand-specific?",
            "required": 0,
            "default": true,
            "type": "bool"
        },
        {
            "id": "paired_end_libs",
            "type": "group",
            "allow_multiple": true,
            "required": 0,
            "default": null,
            "group": [
                {
                    "id": "sample_id",
                    "required": 1,
                    "label": "id for the sample",
                    "desc": "Sample Id that will be used for filenames",
                    "default": "sample",
                    "type": "string"
                },
                {
                    "id": "read1",
                    "required": 1,
                    "label": "Read file 1",
                    "desc": "Read file in FASTQ, FASTA, or BAM",
                    "wstype": "ReadFile",
                    "type": "wstype"
                },
                {
                    "id": "read2",
                    "required": 0,
                    "label": "Read file 2",
                    "desc": "Read file in FASTQ, FASTA, or BAM",
                    "wstype": "ReadFile",
                    "type": "wstype"
                },
                {
                    "id": "interleaved",
                    "label": "Are the paired end reads interleaved?",
                    "required": 0,
                    "default": false,
                    "type": "bool"
                },
                {
                    "id": "insert_size_mean",
                    "label": "Average insert size",
                    "required": 0,
                    "default": null,
                    "type": "int"
                },
                {
                    "id": "insert_size_stdev",
                    "label": "Average insert standard deviation",
                    "required": 0,
                    "default": null,
                    "type": "float"
                },
                {
                    "id": "condition",
                    "label": "Experimental condition index",
                    "required": 0,
                    "default": 1,
                    "type": "int"
                }
            ]
        },
        {
            "id": "single_end_libs",
            "type": "group",
            "allow_multiple": true,
            "required": 0,
            "default": null,
            "group": [
                {
                    "id": "sample_id",
                    "required": 1,
                    "label": "id for the sample",
                    "desc": "Sample Id that will be used for filenames",
                    "default": "sample",
                    "type": "string"
                },
                {
                    "id": "read",
                    "required": 1,
                    "label": "Read file",
                    "desc": "Read file in FASTQ, FASTA, or BAM",
                    "wstype": "ReadFile",
                    "type": "wstype"
                },
                {
                    "id": "condition",
                    "label": "Experimental condition index",
                    "required": 0,
                    "default": 1,
                    "type": "int"
                }
            ]
        },
        {
            "id": "bam_libs",
            "type": "group",
            "allow_multiple": true,
            "required": 0,
            "default": null,
            "group": [
                {
                    "id": "sample_id",
                    "required": 1,
                    "label": "id for the sample",
                    "desc": "Sample Id that will be used for filenames",
                    "default": "sample",
                    "type": "string"
                },
                {
                    "id": "alignment",
                    "required": 1,
                    "label": "Alignment file",
                    "desc": "Alignment file in BAM",
                    "wstype": "BAM",
                    "type": "wstype"
                },
                {
                    "id": "condition",
                    "label": "Experimental condition index",
                    "required": 0,
                    "default": 1,
                    "type": "int"
                }
            ]
        },
        {
            "id": "srr_libs",
            "type": "group",
            "allow_multiple": true,
            "required": 0,
            "default": null,
            "group": [
                {
                    "id": "sample_id",
                    "required": 1,
                    "label": "id for the sample",
                    "desc": "Sample Id that will be used for filenames",
                    "default": "sample",
                    "type": "string"
                },
                {
                    "id": "srr_accession",
                    "required": 1,
                    "label": "SRR Accession",
                    "desc": "SRA Sample accession with SRR prefix",
                    "type": "string"
                },
                {
                    "id": "condition",
                    "label": "Experimental condition index",
                    "required": 0,
                    "default": 1,
                    "type": "int"
                }
            ]
        },
        {
            "id": "reference_genome_id",
            "required": 0,
            "default": null,
            "label": "Reference genome ID",
            "desc": "Reference genome ID",
            "type": "string"
        },
        {
            "id": "genome_type",
            "required": 0,
            "default": null,
            "label": "genome type: bacteria or host",
            "desc": "genome is type bacteria or host",
            "type": "enum",
            "enum": [
                "bacteria",
                "host"
            ]
        },
        {
            "id": "recipe",
            "label": "RNAseq recipe",
            "required": 0,
            "default": "RNA-Rocket",
            "desc": "Recipe used for RNAseq analysis",
            "type": "enum",
            "enum": [
                "RNA-Rocket",
                "Rockhopper",
                "Host"
            ]
        },
        {
            "id": "host_ftp",
            "label": "Host FTP",
            "required": 0,
            "default": null,
            "desc": "Host FTP prefix for obtaining files",
            "type": "string"
        },
        {
            "id": "output_path",
            "label": "Output Folder",
            "required": 1,
            "default": null,
            "desc": "Path to which the output will be written. Defaults to the directory containing the input data.",
            "type": "folder"
        },
        {
            "id": "output_file",
            "label": "File Basename",
            "required": 1,
            "default": null,
            "desc": "Basename for the generated output files. Defaults to the basename of the input data.",
            "type": "wsid"
        },
        {
            "id": "unit_test",
            "label": "Unit Test Path",
            "required": 0,
            "default": null,
            "desc": "Path to the json file used for unit testing",
            "type": "string"
        },
        {
            "id": "skip_sampling",
            "label": "Skip Sampling",
            "required": 0,
            "default": null,
            "desc": "flag to skip the sampling step in alignment.py",
            "type": "string"
        }
    ]
}